{"version":3,"sources":["./src/app/heat-control/shared/heat-control.service.ts","./src/app/core/services/auth.service.ts","./src/app/core/login-dialog/login-dialog.component.ts","./src/app/core/login-dialog/login-dialog.component.html","./src/app/heat-control/relay/relay.component.ts","./src/app/heat-control/relay/relay.component.html","./src/environments/environment.ts","./src/app/core/user-access/user-access.component.ts","./src/app/core/http-interceptors/loading-data-interceptor.ts","./src/app/heat-control/heating-overview/heating-overview.component.ts","./src/app/heat-control/heating-overview/heating-overview.component.html","./src/app/core/guards/auth.guard.ts","./src/app/shared/shared.module.ts","./src/app/heat-control/sensor/sensor.component.ts","./src/app/heat-control/sensor/sensor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/register-dialog/register-dialog.component.ts","./src/app/core/register-dialog/register-dialog.component.html","./src/app/app.module.ts","./src/app/heat-control/heat-control.module.ts","./src/app/shared/filter.pipe.ts","./src/app/core/core.module.ts","./src/app/core/http-interceptors/token.interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DateRange } from '@angular/material/datepicker';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/internal/observable/of';\r\nimport { catchError, map, takeLast } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HeatingConfig } from './heatingConfig.model';\r\nimport { ObjectId } from './objectid.model';\r\nimport { Sensor } from './sensor.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HeatControlService {\r\n  baseUrl = environment.apiEndpoint;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*',\r\n    }),\r\n  };\r\n\r\n  loadingStatsData: boolean;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  writeHeatingConfig(config: HeatingConfig) {\r\n    return this.http.post(\r\n      this.baseUrl + 'write_Heating_Config',\r\n      JSON.stringify(config),\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  getHeatingConfig() {\r\n    return this.http.get(this.baseUrl + 'get_Heating_Config');\r\n  }\r\n\r\n  get_Sensor_Data(_id: ObjectId) {\r\n    return this.http.get(this.baseUrl + 'get_Sensor_Data/' + _id.$oid);\r\n  }\r\n\r\n  getSensors() {\r\n    return this.http.get(this.baseUrl + 'get_Sensors').pipe(\r\n      map((data) => {\r\n        return data;\r\n      }),\r\n      catchError((error) => {\r\n        console.error(error);\r\n\r\n        return of([{ temperature: NaN }]);\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  getSensorStatsInDateRangeOrById(startDate:Date,endDate:Date) {\r\n    return this.http\r\n      .post(\r\n        this.baseUrl + 'get_Sensor_Stats_In_Date_Range',\r\n        JSON.stringify({ start: startDate, end:endDate }),\r\n        this.httpOptions\r\n      )\r\n      .pipe(\r\n        map((sensors_stats: any[]) => {\r\n          sensors_stats.forEach((sensorStatsItem) => {\r\n            sensorStatsItem['series'].map(\r\n              (dataItem) => (dataItem.name = new Date(dataItem.name))\r\n            );\r\n          });\r\n          return sensors_stats;\r\n        })\r\n      );\r\n  }\r\n  // updateSensor(sensor: Sensor) {\r\n  //   return this.http.post<Sensor>(\r\n  //     this.baseUrl + 'update_Sensor',\r\n  //     JSON.stringify(sensor),\r\n  //     this.httpOptions\r\n  //   );\r\n  // }\r\n\r\n  getRelayStatus(_id: ObjectId) {\r\n    return this.http.get(this.baseUrl + 'get_Relay_Status/' + _id.$oid);\r\n  }\r\n\r\n  getRelays() {\r\n    return this.http.get(this.baseUrl + 'get_Relays');\r\n  }\r\n\r\n  register_User() {\r\n    return this.http.post(`${this.baseUrl}register`, {\r\n      id: 3,\r\n      username: 'hellowMan',\r\n      password: 'byeBye!',\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  baseUrl = environment.apiEndpoint;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  loginUser(username: string, password: string) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': `Basic ` + btoa(`${username}:${password}`),\n      }),\n    };\n    return this.http.post<any>(this.baseUrl + 'login', {}, httpOptions).pipe(\n      map((response) => {\n        const authToken = response.token;\n        const expiresAt = new Date(\n          JSON.parse(atob(authToken.split('.')[1])).exp * 1000\n        );\n        console.log('token expires at: ' + expiresAt);\n        localStorage.setItem('authToken', authToken);\n        localStorage.setItem('expiresAt', expiresAt.toUTCString());\n        return response;\n      })\n    );\n  }\n\n  isLoggedIn() {\n    const expTime = new Date(localStorage.getItem('expiresAt'));\n    const now = Date.now();\n    if(this.isTokenExpired(localStorage.getItem('expiresAt'))){ localStorage.clear(); return false;}\n    if(localStorage.getItem('authToken')==null) return false;\n    return true;\n  }\n\n  logoutUser() {\n    if (localStorage.getItem('authToken') == null) return false;\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('expiresAt');\n    this.router.navigateByUrl('login')\n    return true;\n  }\n\n  register() {\n    this.http.post;\n  }\n\n  isTokenExpired(expireUTCTime: string): boolean {\n    if (new Date(expireUTCTime).getTime() <= Date.now()) return true;\n    return false;\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { RegisterDialogComponent } from '../register-dialog/register-dialog.component';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login-dialog',\n  templateUrl: './login-dialog.component.html',\n  styleUrls: ['./login-dialog.component.scss']\n})\nexport class LoginDialogComponent implements OnInit {\n  login_form: FormGroup;\n  form_httpError:HttpErrorResponse\n\n  constructor(\n    fb: FormBuilder,\n    public authService: AuthService,\n    private router: Router,\n    private dialogRef: MatDialog\n  ) {\n    this.login_form = fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n  login() {\n    this.login_form.setErrors(null)\n    const form_val = this.login_form.value;\n    if (this.login_form.valid) {\n      this.authService\n        .loginUser(form_val.username, form_val.password)\n        .subscribe(\n          (res) => {\n            this.dialogRef.closeAll();\n            this.router.navigateByUrl('/home');\n          },\n          (error) => {\n            console.log(error)\n            if (error && error.status == 401) {\n              this.login_form.setErrors({ unauthorized: true });\n            }else if(error.status == 0){\n              this.login_form.setErrors({unknown:true})\n            }\n            else{\n              this.login_form.setErrors({invalid:true})\n              this.form_httpError = error\n            }\n          }\n        );\n    }\n  }\n\n  register(){\n    this.dialogRef.closeAll()\n    this.dialogRef.open(RegisterDialogComponent)\n  }\n}\n","<div class=\"login-flex\">\n  <h2 mat-dialog-title>Login</h2>\n  <mat-dialog-content\n    ><form [formGroup]=\"login_form\">\n      <mat-form-field>\n        <mat-label>username</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          placeholder=\"username\"\n          formControlName=\"username\"\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          placeholder=\"password\"\n          formControlName=\"password\"\n        />\n      </mat-form-field>\n    </form>\n    <mat-error\n      *ngIf=\"this.login_form?.invalid && this.form_httpError !== undefined\"\n      >{{ this.form_httpError?.message }}<br />{{\n        this.form_httpError.error\n      }}</mat-error\n    >\n    <mat-error *ngIf=\"this.login_form.hasError('unauthorized')\"\n      >Falscher Benutzername oder Passwort</mat-error\n      >\n    <mat-error *ngIf=\"this.login_form.hasError('unknown')\"\n      >Unbekannter Fehler, möglicherweise keine Verbindung zum Server.</mat-error\n      >\n      \n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <!-- <button mat-flat-button type=\"submit\" color=\"accent\" mat-button (click)=\"register()\">Registrieren</button> -->\n    <button\n      mat-button\n      mat-raised-button\n      type=\"submit\"\n      color=\"primary\"\n      (click)=\"login()\"\n    >\n      Einloggen\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { switchMapTo, retry, share } from 'rxjs/operators';\nimport { HeatControlService } from '../shared/heat-control.service';\nimport { Relay } from '../shared/relay.model';\n\n@Component({\n  selector: 'app-relay',\n  templateUrl: './relay.component.html',\n  styleUrls: ['./relay.component.scss'],\n})\nexport class RelayComponent implements OnInit {\n  @Input() relay: Relay\n\n  constructor(private heatControlService: HeatControlService) {}\n\n  ngOnInit(): void {\n    this.subscribeToRefresh();\n  }\n\n  async subscribeToRefresh() {\n    timer(0, 500)\n      .pipe(\n        switchMapTo(this.heatControlService.getRelayStatus(this.relay._id)),\n        retry(5),\n        share()\n      )\n      .subscribe((heating: boolean) => {\n        this.relay.heating = heating;\n      });\n  }\n}\n","<h1>{{ relay.name }}</h1>\n<div id=\"heating\" color=\"accent\" *ngIf=\"relay.heating\">\n  Ein\n</div>\n<div id=\"notheating\" *ngIf=\"!relay.heating\">\n  Aus\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { LoginDialogComponent } from '../login-dialog/login-dialog.component';\n\n@Component({\n  selector: 'app-user-access',\n  templateUrl: './user-access.component.html',\n  styleUrls: ['./user-access.component.scss']\n})\nexport class UserAccessComponent implements OnInit {\n\n  constructor(private accessDialog:MatDialog) { }\n\n  ngOnInit(): void { \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    this.accessDialog.open(LoginDialogComponent,dialogConfig)\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HeatControlService } from 'src/app/heat-control/shared/heat-control.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingDataInterceptor implements HttpInterceptor {\r\n  constructor(private heatControlService: HeatControlService) {}\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (\r\n      !(req.url.includes('get_Sensor_Stats_In_Date_Range') ||\r\n      req.url.includes('get_Sensors_Statistics'))\r\n    )\r\n      return next.handle(req);\r\n    this.heatControlService.loadingStatsData = true;\r\n    return next\r\n      .handle(req)\r\n      .pipe(finalize(() => (this.heatControlService.loadingStatsData = false)));\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport {\r\n  DateRange,\r\n  MatDatepickerInputEvent,\r\n} from '@angular/material/datepicker';\r\nimport { HeatControlService } from '../shared/heat-control.service';\r\nimport { Relay } from '../shared/relay.model';\r\nimport { Sensor } from '../shared/sensor.model';\r\nimport { HeatingConfig } from '../shared/heatingConfig.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { element } from 'protractor';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-heating-overview',\r\n  templateUrl: './heating-overview.component.html',\r\n  styleUrls: ['./heating-overview.component.scss'],\r\n})\r\nexport class HeatingOverviewComponent implements OnInit {\r\n  sensors: Sensor[];\r\n  relays: Relay[];\r\n  viewSensorStats: any[] = null;\r\n  currentStatsPollSubscription: Subscription;\r\n  dateRangeOptions = [\r\n    { time: 'Heute', selected: true },\r\n    { time: 'Woche', selected: false },\r\n    { time: 'Monat', selected: false },\r\n    { time: 'Jahr', selected: false },\r\n    { time: 'Benutzerdefiniert', selected: false },\r\n  ];\r\n\r\n  heatingConfigForm_httpError: HttpErrorResponse;\r\n  heatingConfigFormGroup = new FormGroup({\r\n    REGULATION_DURATION_SECONDS: new FormControl(),\r\n    REGULATION_INTERVALL_SECONDS: new FormControl(),\r\n    REGULATION_TEMPERATURE_TOLERANCE: new FormControl(),\r\n  });\r\n\r\n  dateRangeFormGroup = new FormGroup({\r\n    start: new FormControl(),\r\n    end: new FormControl(),\r\n  });\r\n\r\n  constructor(public heatControlService: HeatControlService) {\r\n    this.heatingConfigFormGroup.disable();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initHeatingConfig();\r\n    this.initDevices();\r\n    this.chipStatsDateRangeClicked(\r\n      this.dateRangeOptions.find((elem) => elem.selected == true).time\r\n    );\r\n  }\r\n  initHeatingConfig() {\r\n    this.heatControlService.getHeatingConfig().subscribe((config) => {\r\n      this.heatingConfigFormGroup.setValue(config);\r\n    });\r\n  }\r\n\r\n  initDevices() {\r\n    this.heatControlService.getRelays().subscribe(\r\n      (data: Relay[]) => {\r\n        this.relays = data;\r\n        console.log(this.relays);\r\n      },\r\n      (error) => {\r\n        console.log('caught error');\r\n        return (this.relays = null);\r\n      }\r\n    );\r\n    this.heatControlService.getSensors().subscribe(\r\n      (data: Sensor[]) => {\r\n        this.sensors = data;\r\n      },\r\n      (error) => {\r\n        return (this.sensors = null);\r\n      }\r\n    );\r\n  }\r\n\r\n  dateTickFormatting(val: any): string {\r\n    if (val instanceof Date) {\r\n      var options = new Intl.DateTimeFormat();\r\n      options.resolvedOptions();\r\n      return (<Date>val).toLocaleString('de-AT', {\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n      });\r\n    }\r\n  }\r\n\r\n  statsDateRangeChanged(event?: MatDatepickerInputEvent<Date>) {\r\n    if (\r\n      this.dateRangeFormGroup.value['start'] === null ||\r\n      this.dateRangeFormGroup.value['end'] === null ||\r\n      this.dateRangeFormGroup.value['end'] <\r\n        this.dateRangeFormGroup.value['start']\r\n    )\r\n      return;\r\n    if (this.currentStatsPollSubscription)\r\n      this.currentStatsPollSubscription.unsubscribe();\r\n    this.currentStatsPollSubscription = this.heatControlService\r\n      .getSensorStatsInDateRangeOrById(\r\n        this.dateRangeFormGroup.value['start'],\r\n        this.dateRangeFormGroup.value['end']\r\n      )\r\n      .subscribe((sensor_stats) => (this.viewSensorStats = sensor_stats));\r\n  }\r\n\r\n  toggleChipSelection(index: number) {\r\n    this.dateRangeOptions.forEach((element) => (element.selected = false)); //removes any selection of chips\r\n    this.dateRangeOptions[index].selected = true;\r\n  }\r\n\r\n  getChipByText(timetext: string) {\r\n    return this.dateRangeOptions.find((elem) => elem.time == timetext);\r\n  }\r\n\r\n  chipStatsDateRangeClicked(dateRangeOption: string) {\r\n    let endPointDateRange = new Date();\r\n    let startPointDateRange = new Date();\r\n    startPointDateRange.setUTCHours(0, 0, 0, 0); //0 hours,minutes,seconds,miliseconds\r\n    switch (dateRangeOption) {\r\n      case 'Heute':\r\n        this.toggleChipSelection(\r\n          this.dateRangeOptions.findIndex((element) => element.time == 'Heute')\r\n        );\r\n        break;\r\n      case 'Woche':\r\n        startPointDateRange.setUTCDate(\r\n          endPointDateRange.getUTCDate() - endPointDateRange.getUTCDay()\r\n        ); //substracts the days passed in the current week\r\n        this.toggleChipSelection(\r\n          this.dateRangeOptions.findIndex((element) => element.time == 'Woche')\r\n        );\r\n        break;\r\n      case 'Monat':\r\n        startPointDateRange.setUTCDate(\r\n          endPointDateRange.getUTCDate() - endPointDateRange.getUTCDate() + 1 //so that it's first day not day zero\r\n        ); //sets to first of the current month\r\n        this.toggleChipSelection(\r\n          this.dateRangeOptions.findIndex((element) => element.time == 'Monat')\r\n        );\r\n        break;\r\n      case 'Jahr':\r\n        startPointDateRange.setUTCFullYear(\r\n          endPointDateRange.getUTCFullYear(),\r\n          1,\r\n          1\r\n        ); //sets startPointDateRange to first day of first month (January), current year\r\n        this.toggleChipSelection(\r\n          this.dateRangeOptions.findIndex((element) => element.time == 'Jahr')\r\n        );\r\n        break;\r\n      case 'Benutzerdefiniert':\r\n        this.toggleChipSelection(\r\n          this.dateRangeOptions.findIndex(\r\n            (element) => element.time == 'Benutzerdefiniert'\r\n          )\r\n        );\r\n        return;\r\n\r\n      default:\r\n        // startPointDateRange = endPointDateRange;\r\n        break;\r\n    }\r\n    this.dateRangeFormGroup.setValue({\r\n      start: startPointDateRange,\r\n      end: endPointDateRange,\r\n    });\r\n\r\n    if (this.currentStatsPollSubscription)\r\n      this.currentStatsPollSubscription.unsubscribe();\r\n    this.currentStatsPollSubscription = this.heatControlService\r\n      .getSensorStatsInDateRangeOrById(startPointDateRange, endPointDateRange)\r\n      .subscribe((sensor_stats) => (this.viewSensorStats = sensor_stats));\r\n  }\r\n\r\n  submitHeatingConfigChanges() {\r\n    const config: HeatingConfig = {\r\n      REGULATION_DURATION_SECONDS: this.heatingConfigFormGroup.value\r\n        .REGULATION_DURATION_SECONDS,\r\n      REGULATION_INTERVALL_SECONDS: this.heatingConfigFormGroup.value\r\n        .REGULATION_INTERVALL_SECONDS,\r\n      REGULATION_TEMPERATURE_TOLERANCE: this.heatingConfigFormGroup.value\r\n        .REGULATION_TEMPERATURE_TOLERANCE,\r\n    };\r\n    this.heatControlService.writeHeatingConfig(config).subscribe(\r\n      () => {\r\n        this.heatingConfigFormGroup.disable();\r\n        this.heatingConfigForm_httpError = null;\r\n      },\r\n      (error) => {\r\n        this.heatingConfigForm_httpError = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  switchConfigEditing() {\r\n    this.heatingConfigFormGroup.disabled\r\n      ? this.heatingConfigFormGroup.enable()\r\n      : this.heatingConfigFormGroup.disable();\r\n  }\r\n}\r\n","<div class=\"monitor-board\">\r\n  <div class=\"monitor-unit\">\r\n    <div *ngFor=\"let currSensor of sensors\">\r\n      <app-sensor class=\"control-unit\" [sensor]=\"currSensor\"></app-sensor>\r\n    </div>\r\n    <div\r\n      *ngFor=\"let currSensor of sensors | filter: 'Vorlauf'\"\r\n      class=\"control-unit app-vorlauf\"\r\n      [ngClass]=\"\r\n        this.currSensor.temperature < this.currSensor.idealTemperature\r\n          ? 'background-warm'\r\n          : 'background-cold'\r\n      \"\r\n    >\r\n      <h1>Sollwert Vorlauf</h1>\r\n      <h1>{{ currSensor.idealTemperature | number: \".1-1\" }} °C</h1>\r\n    </div>\r\n    <div *ngFor=\"let currRelay of relays; index as i\">\r\n      <app-relay\r\n        [ngClass]=\"\r\n          this.currRelay.name.includes('Heizung +')\r\n            ? 'background-warm'\r\n            : 'background-cold'\r\n        \"\r\n        class=\"control-unit\"\r\n        [relay]=\"currRelay\"\r\n      ></app-relay>\r\n    </div>\r\n  </div>\r\n  <div class=\"config-wrapper\">\r\n    <button\r\n      id=\"editTimeControlIcon\"\r\n      mat-button\r\n      (click)=\"this.switchConfigEditing()\"\r\n    >\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n    <form\r\n      aria-disabled=\"true\"\r\n      [formGroup]=\"heatingConfigFormGroup\"\r\n      (ngSubmit)=\"submitHeatingConfigChanges()\"\r\n      method=\"post\"\r\n      id=\"TimeControlForm\"\r\n    >\r\n      <mat-form-field>\r\n        <mat-label>Regelintervall in Sekunden</mat-label>\r\n        <input\r\n          matNativeControl\r\n          matInput\r\n          type=\"number\"\r\n          formControlName=\"REGULATION_INTERVALL_SECONDS\"\r\n        />\r\n        <span matSuffix></span>\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Regeldauer in Sekunden</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          formControlName=\"REGULATION_DURATION_SECONDS\"\r\n        />\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>Temperaturtoleranz in Grad</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"number\"\r\n          formControlName=\"REGULATION_TEMPERATURE_TOLERANCE\"\r\n        />\r\n      </mat-form-field>\r\n      <button\r\n        color=\"primary\"\r\n        [disabled]=\"this.heatingConfigFormGroup.disabled\"\r\n        mat-raised-button\r\n        type=\"submit\"\r\n      >\r\n        Speichern\r\n      </button>\r\n      <mat-error *ngIf=\"this.heatingConfigForm_httpError\">{{\r\n        this.heatingConfigForm_httpError.message\r\n      }}</mat-error>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div id=\"chartWrapper\">\r\n  <div id=\"dateRangeWrapper\">\r\n    <mat-chip-list selectable=\"true\">\r\n      <mat-chip\r\n        (click)=\"chipStatsDateRangeClicked(dateParam.time)\"\r\n        [selected]=\"dateParam.selected\"\r\n        *ngFor=\"let dateParam of this.dateRangeOptions\"\r\n        [value]=\"dateParam.time\"\r\n        >{{ dateParam.time }}</mat-chip\r\n      >\r\n    </mat-chip-list>\r\n    <mat-form-field id=\"dateRangePickerFormField\">\r\n      <mat-date-range-input\r\n        [formGroup]=\"this.dateRangeFormGroup\"\r\n        [rangePicker]=\"statsRangePicker\"\r\n        [disabled]=\"!getChipByText('Benutzerdefiniert').selected\"\r\n        (dateChange)=\"statsDateRangeChanged()\"\r\n      >\r\n        <input matStartDate formControlName=\"start\"/>\r\n        <input matEndDate formControlName=\"end\"/>\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle\r\n        matSuffix\r\n        [for]=\"statsRangePicker\"\r\n      ></mat-datepicker-toggle>\r\n      <mat-date-range-picker #statsRangePicker> </mat-date-range-picker>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <ngx-charts-line-chart\r\n    id=\"statsGraph\"\r\n    *ngIf=\"viewSensorStats\"\r\n    [results]=\"this.viewSensorStats\"\r\n    [autoScale]=\"true\"\r\n    [xAxis]=\"true\"\r\n    [legend]=\"true\"\r\n    [legendPosition]=\"'below'\"\r\n    [timeline]=\"true\"\r\n    [showGridLines]=\"true\"\r\n    [showXAxisLabel]=\"false\"\r\n    [showYAxisLabel]=\"false\"\r\n    [xAxisTickFormatting]=\"this.dateTickFormatting\"\r\n    [yAxis]=\"true\"\r\n    [activeEntries]=\"this.viewSensorStats\"\r\n    xAxisLabel=\"Zeit\"\r\n    yAxisLabel=\"Temperatur\"\r\n  ></ngx-charts-line-chart>\r\n  <div *ngIf=\"this.heatControlService.loadingStatsData\">\r\n    <mat-progress-bar mode=\"query\"></mat-progress-bar>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService:AuthService,private router:Router){\n    \n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n      console.log(\"guarded route\")\n      if(!this.authService.isLoggedIn()){\n        this.router.navigate(['login'])\n        return false\n      }\n      return true\n  }\n}","\r\n\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterPipe } from './filter.pipe';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n@NgModule({\r\n  declarations: [FilterPipe],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatSliderModule,\r\n    MatButtonToggleModule,\r\n    NgxChartsModule,\r\n    MatFormFieldModule,\r\n    MatChipsModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatProgressBarModule\r\n  ],\r\n\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatGridListModule,\r\n    MatSliderModule,\r\n    NgxChartsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    FilterPipe,\r\n    MatDatepickerModule,\r\n    MatButtonToggleModule,\r\n    MatNativeDateModule,\r\n    MatProgressBarModule\r\n  ],\r\n})\r\nexport class SharedModule {\r\n}\r\n","import { EventEmitter } from '@angular/core';\nimport { Component, Input, OnInit, Output } from '@angular/core';\nimport { interval, Observable, timer } from 'rxjs';\nimport { retry, switchMapTo, share } from 'rxjs/operators';\nimport { HeatControlService } from '../shared/heat-control.service';\nimport { Relay } from '../shared/relay.model';\nimport { Sensor } from '../shared/sensor.model';\n\n@Component({\n  selector: 'app-sensor',\n  templateUrl: './sensor.component.html',\n  styleUrls: ['./sensor.component.scss'],\n})\nexport class SensorComponent implements OnInit {\n  @Input() sensor: Sensor;\n  @Output() changeRelayStatus: Relay;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25'],\n  };\n  constructor(private heatControlService: HeatControlService) {}\n\n  ngOnInit(): void {\n    this.subscribeToRefresh();\n  }\n\n  ngOnDestroy(){\n    \n  }\n\n  async subscribeToRefresh() {\n    timer(0, 5000)\n      .pipe(\n        switchMapTo(this.heatControlService.get_Sensor_Data(this.sensor._id)),\n        retry(5),\n        share()\n      )\n      .subscribe((sensor:Sensor) => {\n        this.sensor = sensor;\n      });\n  }\n\n  // idealTemperatureChanged() {\n  //   this.heatControlService\n  //     .updateSensor(this.sensor)\n  //     .subscribe((response) => console.log(response));\n  // }\n\n  valueFormatting = (value:number)=>{\n    return value+\"\".slice(0,-2)\n  }\n\n  registerUser(){\n    console.log(\"----------------------------- register user ------------------------------------\")\n    this.heatControlService.register_User().subscribe(res=>console.log(res))\n  }\n}\n","<!-- <div class=\"container\">\n  <h3>Temperatur</h3>\n  <h5>\n    Aktuell: {{ sensor.temperature }}/Richtwert: {{ sensor.idealTemperature }}\n  </h5>\n  \n  <mat-slider\n    [max]=\"sensor.idealTemperature + sensor.tolerance\"\n    [min]=\"sensor.idealTemperature - sensor.tolerance\"\n    step=\"0.5\"\n    [value]=\"sensor.temperature\"\n  ></mat-slider>\n  [angleSpan]=\"180\"\n      [startAngle]=\"-90\"\n      [smallSegments]=\"2\"\n      [bigSegments]=\"8\"\n      [axisTickFormatting]=\"axisTickFormatting \"\n</div> -->\n<h1> {{ this.sensor.name }}</h1>\n<h1>{{this.sensor.temperature | number : '.1-1'}} °C</h1>\n\n<!-- <div>  \n  <ngx-charts-linear-gauge\n    [value]=\"this.sensor.temperature | number : '.1-1'\"\n    [units]=\"('/')+this.sensor.idealTemperature\"\n    [previousValue]=\"this.sensor.idealTemperature | number : '.1-1'\"\n    [max]=\"40\"\n    [valueFormatting]=\"valueFormatting\"\n    [customColors]=\"\"\n  ></ngx-charts-linear-gauge>\n</div>\n<h2 mat-heading>{{this.sensor.idealTemperature}}</h2>\n<mat-slider\n  [max]=\"40\"\n  [min]=\"0\"\n  [thumbLabel]=\"true\"\n  step=\"0.5\"\n  [(ngModel)]=\"sensor.idealTemperature\"\n  (change)=\"idealTemperatureChanged()\"\n></mat-slider> -->\n","import { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { HeatControlService } from './heat-control/shared/heat-control.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'heatingControlBoard';\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  constructor(private authService:AuthService,private router:Router){}\n\n  logout(){\n    if (this.authService.logoutUser()) this.sidenav.toggle()\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n  <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <h1>Heizungsregelung</h1>\r\n</mat-toolbar>\r\n<mat-sidenav-container style=\"height: 90%\">\r\n  <mat-sidenav #sidenav color=\"primary\">\r\n    <mat-nav-list>\r\n      <a mat-list-item routerLink=\"/home\">Home</a>\r\n      <a mat-list-item (click)=\"logout()\">Logout</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register-dialog',\n  templateUrl: './register-dialog.component.html',\n  styleUrls: ['./register-dialog.component.scss'],\n})\nexport class RegisterDialogComponent implements OnInit {\n  register_form: FormGroup;\n\n  constructor(fb:FormBuilder,private authService:AuthService) {\n    this.register_form = fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  register() {\n  }\n}\n","<h2 mat-dialog-title>Registrieren</h2>\n<mat-dialog-content\n  ><form [formGroup]=\"register_form\">\n    <mat-form-field>\n        <mat-label>username</mat-label>\n        <input matInput type=\"text\" placeholder=\"username\" formControlName=\"username\" >\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>password</mat-label>\n        <input matInput type=\"password\" placeholder=\"password\" formControlName=\"password\">\n    </mat-form-field>\n   \n</form>\n<mat-error *ngIf=\"this.register_form.hasError('unauthorized')\">Falscher Benutzername oder Passwort</mat-error>\n</mat-dialog-content\n>\n<mat-dialog-actions>\n  <button mat-flat-button type=\"submit\" color=\"primary\" mat-button (click)=\"register()\">Ok</button>\n</mat-dialog-actions>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from './core/http-interceptors/token.interceptor';\r\nimport { HeatControlModule } from './heat-control/heat-control.module';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { LoadingDataInterceptor } from './core/http-interceptors/loading-data-interceptor';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    HeatControlModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: LoadingDataInterceptor,\r\n      multi: true,\r\n    },\r\n    { provide: MAT_DATE_LOCALE, useValue: 'de-AT' },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SensorComponent } from './sensor/sensor.component';\nimport { RelayComponent } from './relay/relay.component';\nimport { HeatingOverviewComponent } from './heating-overview/heating-overview.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [SensorComponent, RelayComponent, HeatingOverviewComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n    \n  ],\n  exports:[\n    HeatingOverviewComponent\n  ]\n})\nexport class HeatControlModule { }\n","import { JsonpClientBackend } from '@angular/common/http';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(values: any[], term: any): any {\n    if(!values)return null\n    if(!term)return values\n\n    return values.filter(value=>JSON.stringify(value).includes(term))\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './http-interceptors/token.interceptor';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { UserAccessComponent } from './user-access/user-access.component';\nimport { RegisterDialogComponent } from './register-dialog/register-dialog.component';\nimport { LoginDialogComponent } from './login-dialog/login-dialog.component';\n\n@NgModule({\n  declarations: [LoginDialogComponent, UserAccessComponent, RegisterDialogComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SharedModule\n  ],\n  exports:[\n    CommonModule,\n    HttpClientModule,\n    SharedModule\n  ],\n  providers:[\n  ],\n})\nexport class CoreModule { }\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService:AuthService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const headers = req.headers\r\n            .set('Content-Type', 'application/json');\r\n        if(localStorage.getItem('authToken')){\r\n            if(this.authService.isTokenExpired(localStorage.getItem('expiresAt'))){\r\n                this.authService.logoutUser()\r\n            }\r\n            const authReq = req.clone(\r\n                {headers: req.headers.set('Authorization', localStorage.getItem('authToken'))}\r\n            );\r\n            return next.handle(authReq);\r\n        }else{\r\n            return next.handle(req)\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { UserAccessComponent } from './core/user-access/user-access.component';\nimport { HeatingOverviewComponent } from './heat-control/heating-overview/heating-overview.component';\n\nconst routes: Routes = [\n  { path: 'login', component: UserAccessComponent },\n  { path: 'home', component: HeatingOverviewComponent,canActivate:[AuthGuard]},\n  { path: '**',redirectTo:'home'},\n  { path: '',  redirectTo:'home',pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}